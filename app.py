from flask import Flask, render_template, request, jsonify
from models import mysql_db
from ClockIn import ClockIn
import settings
import models
from flask.ext.login import LoginManager


app = Flask(__name__)
app.secret_key = settings.secret_key
login_manager = LoginManager()
login_manager.init_app(app)
login_manager.login_view = 'login'

@login_manager.user_loader
def load_user(userid):
    try:
        return models.User.get(models.User.id == userid)
    except models.peewee.DoesNotExist:
        return None


@app.route("/in", methods=['GET', 'POST'])
def clock_that_bitch_in():
    clock = ClockIn()
    return clock.punch_in()


@app.route("/out", methods=['GET', 'POST'])
def clock_that_bitch_out():
    clock = ClockIn()
    return clock.punch_out()


@app.route("/")
def main():
    return render_template('base.html')


@app.route("/list_entries")
def list_entries():
    clock = ClockIn()
    return clock.list_entries_for_day()


@app.route("/total_time_today")
def total_time_today():
    clock = ClockIn()
    return clock.total_time_today()


@app.route("/total_time_this_week")
def total_time_this_week():
    clock = ClockIn()
    return clock.total_time_this_week()


@app.before_request
def _db_connect():
    """
    This hook ensures that a connection is opened to handle any queries
    generated by the request.
    """
    mysql_db.connect()


@app.teardown_request
def _db_close(exc):
    """
    This hook ensures that the connection is closed when we've finished
    processing the request.
    """
    if not mysql_db.is_closed():
        mysql_db.close()


if __name__ == "__main__":
    # models.initialize()
    # models.User.create_user(
    #     username='2achary',
    #     email='cras.zswift@gmail.com',
    #     password=settings.kwargs['password'],
    #     admin=True
    # )
    app.run(debug=True)


